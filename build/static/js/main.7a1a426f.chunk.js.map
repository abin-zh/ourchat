{"version":3,"sources":["Login.js","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","login","hexpswd","hex","state","user","pswd","fetch","body","JSON","stringify","name","method","headers","then","res","json","code","socket","emit","once","check","parent","getLoginMsg","getChatMsg","sign","setState","ToastClass","toast","setTimeout","talk","console","log","msg","handleChange","key","event","item","target","value","bind","IsLogin","io","className","type","id","placeholder","onChange","this","onClick","React","Component","Chat","componentDidUpdate","scrollToBottom","updateChat","chatData","ChatList","data","serach","talkname","SearchClass","SearchList","addTalk","maker","all","push","joinTalk","getChat","ChatName","msgs","sendChat","chat","shutdown","messagesEnd","maxScrollTop","scrollHeight","clientHeight","scrollTop","deleteTalk","index","i","length","splice","outline","window","location","reload","Isline","IsChatline","on","map","ref","el","App","flag","LoginClass","ChatClass","ChatMsg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a1a426f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport io from 'socket.io-client';\r\nimport { hex } from 'js-md5'\r\nimport \"./Login.css\"\r\nimport \"animate.css\"\r\n\r\nclass Login extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n        this.sign = this.sign.bind(this);\r\n        this.state = {\r\n            user:{\r\n                name:'',\r\n                pswd:'',\r\n            },\r\n            IsLogin:'',\r\n            toast:'',\r\n            ToastClass:'toastCenter disnone'\r\n        }\r\n        this.socket = io(\"ws://localhost:10086\");\r\n    }\r\n    login = () => {\r\n        let hexpswd = hex(this.state.user.pswd);\r\n        fetch(\"http://127.0.0.1:8082/selUser\",{\r\n            body:JSON.stringify({name:this.state.user.name,pswd:hexpswd}),\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json; charset=utf-8\"\r\n            }\r\n        }).then(res => res.json()).then(res => {\r\n            if(res.code === 200){\r\n                this.socket.emit(\"CheckLogin\",this.state.user.name);\r\n                this.socket.once(\"CheckLogin\",(check) => { //阻断用户多端登录\r\n                    if(check){\r\n                        this.props.parent.getLoginMsg(true);\r\n                        this.props.parent.getChatMsg({name:this.state.user.name});\r\n                    }else{\r\n                        this.props.parent.getLoginMsg(false);\r\n                    }\r\n                })\r\n            }else{\r\n                this.props.parent.getLoginMsg(false);\r\n            }\r\n        });\r\n    }\r\n    \r\n    sign = () => {\r\n        let hexpswd = '';\r\n        if(this.state.user.name === '' || this.state.user.pswd === ''){\r\n            this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:\"用户名密码不能为空哦\"});\r\n            setTimeout(() => {\r\n                this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"});\r\n             }, 1500);\r\n             return 0;          \r\n        }else{\r\n            hexpswd = hex(this.state.user.pswd);\r\n        }\r\n        fetch(\"http://127.0.0.1:8082/signUser\",{\r\n            body:JSON.stringify({name:this.state.user.name,pswd:hexpswd,talk:[]}),\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json; charset=utf-8\"\r\n            }\r\n        }).then(res => res.json()).then(res => {\r\n            console.log(res);\r\n            this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:res.msg});\r\n            setTimeout(() => {\r\n               this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n            }, 1500);\r\n        });\r\n    }\r\n    handleChange = (key,event) => {\r\n        let user = this.state.user\r\n        for(let item in this.state.user){\r\n            if(item === key){\r\n                user[item] = event.target.value\r\n                this.setState({user:user})\r\n            }\r\n        }\r\n    }\r\n    render(){\r\n        return  <div className=\"Login_content\">\r\n                    <div className=\"Login_left\"></div>\r\n                    <div className=\"Login_right\">\r\n                        <div className=\"Login_login\">\r\n                            <h2>登录</h2>\r\n                            <input type=\"text\" id=\"name\" placeholder=\"输入用户名\"  onChange={this.handleChange.bind(this,'name')}/>\r\n                            <input type=\"password\" id=\"pswd\" placeholder=\"输入你的密码\"  onChange={this.handleChange.bind(this,'pswd')}/>\r\n                            <div className=\"Login_right_bottom\">\r\n                                <button onClick={this.login}>登录</button>\r\n                                <button onClick={this.sign}>注册</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={this.state.ToastClass}>{this.state.toast}</div>\r\n                </div>\r\n        \r\n    }\r\n}\r\nexport default Login;","import React from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport \"animate.css\";\r\nimport \"./Chat.css\";\r\nimport \"./icon/iconfont.css\";\r\n\r\nclass Chat extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            talk:{\r\n                talkname:\"\",\r\n                maker:\"\",\r\n                msg:\"\"\r\n            },\r\n            ToastClass:\"\",\r\n            SearchClass:\"disnone\",\r\n            toast:\"\",\r\n            SearchList:[],\r\n            ChatList:[],\r\n            ChatName:\"\",\r\n            msgs:[],\r\n            Isline:\"offline animate__animated animate__fadeIn\",\r\n            IsChatline:\"online animate__animated animate__fadeIn\"\r\n        }\r\n        this.socket = io(\"ws://localhost:10086\");\r\n        this.socket.on(\"connect\",() => {\r\n            this.setState({Isline:\"offline animate__animated animate__fadeOut\"});\r\n            setTimeout(() => {\r\n                this.setState({Isline:\"online animate__animated animate__fadeIn\"});\r\n            },1000);\r\n            this.socket.on(\"chat\",(msg) => {\r\n                if(this.props.chatData.name !== msg.name){\r\n                    this.setState({Isline:\"online animate__animated animate__fadeOut\"});\r\n                    setTimeout(() => {\r\n                        this.setState({Isline:\"online animate__animated animate__fadeIn\"});\r\n                    },500);\r\n                    if(this.state.ChatName === msg.talkname){\r\n                        this.setState({IsChatline:\"online animate__animated animate__fadeOut\"});\r\n                        setTimeout(() => {\r\n                            this.setState({IsChatline:\"online animate__animated animate__fadeIn\"});\r\n                            let all = this.state.msgs;\r\n                            all.push({name:msg.name,chat:msg.msg});\r\n                            this.setState({msgs:all});\r\n                        },500);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    }\r\n    \r\n    componentDidUpdate = () => {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    updateChat = () => {\r\n        fetch(\"http://127.0.0.1:8082/chatList\",{\r\n                body:JSON.stringify({name:this.props.chatData.name}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n            }).then(res => res.json()).then(res => {\r\n                this.setState({ChatList:res.data.talk});\r\n            })\r\n    }\r\n\r\n    serach = () => {\r\n        if(this.state.talk.talkname === ''){\r\n            this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:\"搜索的话题名不能为空哦\"});\r\n            setTimeout(() => {\r\n               this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n            }, 1500);\r\n        }else{\r\n            fetch(\"http://127.0.0.1:8082/funTalk\",{\r\n                body:JSON.stringify({talkname:this.state.talk.talkname}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n            }).then(res => res.json()).then(res => {\r\n                this.setState({SearchClass:\"searchClass animate__animated animate__zoomInDown\",SearchList:res.data});\r\n            })\r\n        }\r\n    }\r\n    \r\n    addTalk = () => {\r\n        if(this.state.talk.talkname === ''){\r\n            this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:\"话题名不能为空哦\"});\r\n            setTimeout(() => {\r\n               this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n            }, 1500);\r\n        }else{\r\n            fetch(\"http://127.0.0.1:8082/addTalk\",{\r\n                body:JSON.stringify({talkname:this.state.talk.talkname,maker:this.props.chatData.name}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n            }).then(res => res.json()).then(res => {\r\n                this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:res.msg});\r\n                setTimeout(() => {\r\n                   this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n                }, 1500);\r\n                if(res.code === 200){\r\n                    let all = this.state.ChatList;\r\n                    all.push({talkname:this.state.talk.talkname});\r\n                    this.setState({ChatList:all});\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    joinTalk = (talkname) => {\r\n        fetch(\"http://127.0.0.1:8082/joinTalk\",{\r\n                body:JSON.stringify({talkname:talkname,name:this.props.chatData.name}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n            }).then(res => res.json()).then(res => {\r\n                this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:res.msg});\r\n                setTimeout(() => {\r\n                   this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n                }, 1500);\r\n                if(res.code === 200){\r\n                    let all = this.state.ChatList;\r\n                    all.push({talkname:talkname});\r\n                    this.setState({ChatList:all});\r\n                }\r\n            });\r\n    }\r\n\r\n    getChat = (talkname) => {\r\n        this.setState({ChatName:talkname});\r\n        fetch(\"http://127.0.0.1:8082/funChat\",{\r\n                body:JSON.stringify({talkname:talkname}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n        }).then(res => res.json()).then(res => {\r\n                this.setState({msgs:res.data});\r\n        });\r\n    }\r\n\r\n    sendChat = () => {\r\n        if(this.state.ChatName !== \"\"){\r\n            fetch(\"http://127.0.0.1:8082/addChat\",{\r\n                body:JSON.stringify({talkname:this.state.ChatName,name:this.props.chatData.name,chat:this.state.talk.msg}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n            }).then(res => res.json()).then(res => {\r\n               let all = this.state.msgs;\r\n               all.push({name:this.props.chatData.name,chat:this.state.talk.msg});\r\n               this.setState({msgs:all,talk:{msg:\"\"}});\r\n            });\r\n            this.socket.emit(\"msg\",{name:this.props.chatData.name,talkname:this.state.ChatName,msg:this.state.talk.msg});\r\n        }else{\r\n            this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:\"您还未选着话题哦\"});\r\n            setTimeout(() => {\r\n               this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n    shutdown = () => {\r\n        this.setState({SearchClass:\"searchClass animate__animated animate__fadeOut\"});\r\n    }\r\n\r\n    handleChange = (key,event) => {\r\n        let talk = this.state.talk\r\n        for(let item in this.state.talk){\r\n            if(item === key){\r\n                talk[item] = event.target.value\r\n                this.setState({talk:talk})\r\n            }\r\n        }\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        if (this.messagesEnd) {\r\n            const scrollHeight = this.messagesEnd.scrollHeight;\r\n            const height = this.messagesEnd.clientHeight;\r\n            const maxScrollTop = scrollHeight - height;\r\n            this.messagesEnd.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\r\n        }\r\n    }\r\n\r\n    deleteTalk = () => {\r\n        if(this.state.ChatName !== \"\"){\r\n            fetch(\"http://127.0.0.1:8082/deleTalk\",{\r\n                body:JSON.stringify({talkname:this.state.ChatName,name:this.props.chatData.name}),\r\n                method:\"POST\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json; charset=utf-8\"\r\n                }\r\n            }).then(res => res.json()).then(res => {\r\n                this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:res.msg});\r\n                setTimeout(() => {\r\n                   this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n                }, 1500);\r\n            });\r\n            let all =  this.state.ChatList;\r\n            let index = null;\r\n            for(let i = 0;i < all.length;i++){\r\n                if(all[i].talkname === this.state.ChatName){\r\n                    index = i;\r\n                }\r\n            }\r\n            all.splice(index,1);\r\n            console.log(all);\r\n            this.setState({ChatList:all});\r\n        }else{\r\n            this.setState({ToastClass:\"toastCenter animate__animated animate__zoomInDown\",toast:\"您还未选着话题哦\"});\r\n            setTimeout(() => {\r\n               this.setState({ToastClass:\"toastCenter animate__animated animate__fadeOut\"}); \r\n            }, 1500);\r\n        }\r\n    }\r\n\r\n    outline = () => {\r\n        this.socket.emit(\"outline\",this.props.chatData.name);\r\n        window.location.reload();\r\n    }\r\n\r\n    render(){\r\n        return  <div className=\"Chat_content\">\r\n                    <div className=\"Chat_Tab\">\r\n                        <div className=\"Chat_left\">\r\n                            <div className=\"Chat_Left_head\">\r\n                                <div className=\"Chat_Left_img\"></div>\r\n                                <div className=\"Chat_Left_name\">{this.props.chatData.name}</div>\r\n                                <div className={this.state.Isline} onClick={this.outline}></div>\r\n                            </div>\r\n                            <div className=\"Chat_nav\">\r\n                                <input className=\"Chat_input\" onChange={this.handleChange.bind(this,\"talkname\")}/>\r\n                                <button className=\"iconfont\" onClick={this.serach}>&#xe6b3;</button>\r\n                                <button className=\"iconfont\" onClick={this.addTalk}>&#xe6b8;</button>\r\n                            </div>\r\n                            <div className=\"Chat_refresh\"><button className=\"iconfont\" onClick={this.updateChat}>&#xe6ae;</button></div>\r\n                            <div className=\"Chat_list\">\r\n                                {\r\n                                    (this.state.ChatList).map((item,index) =>{\r\n                                         return(\r\n                                             <div className=\"cl\" key={index} onClick={() => this.getChat(item.talkname)}>\r\n                                                 <div className=\"cl_img\"></div>\r\n                                                 <div className=\"cl_name\">{item.talkname}</div>\r\n                                                <div className={\"outline \" + (item.talkname === this.state.ChatName ? this.state.IsChatline : \"\")}></div> \r\n                                            </div>\r\n                                         )\r\n                                     })\r\n                                }\r\n                            </div>     \r\n                        </div>\r\n                        <div className=\"Chat_right\">\r\n                            <div className=\"Chat_Right_head\">\r\n                                <div className=\"Chat_Right_img\"></div>\r\n                                <div className=\"Chat_Right_name\">{this.state.ChatName}</div>\r\n                                <div className=\"Chat_Delete\"><button className=\"iconfont\" onClick={this.deleteTalk}>&#xe6b1;</button></div>\r\n                            </div>\r\n                            <div className=\"Chat_body\" ref={ (el) => { this.messagesEnd = el; }}>\r\n                                {\r\n                                        this.state.msgs.map((item,index) => {\r\n                                            return(\r\n                                                <div className=\"Talk\" key={index}>\r\n                                                    <div className={item.name === this.props.chatData.name ? \"Talk_all Right\" : \"Talk_all Left\"}>\r\n                                                        <div className=\"Talk_chat\">{item.chat}</div>\r\n                                                        <div className={item.name === this.props.chatData.name ? \"Talk_img Right_img\" : \"Talk_img Left_img\"} id={item.name}></div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            )\r\n                                        })\r\n                                        \r\n                                }\r\n                            </div>\r\n                            <div className=\"input_body\">\r\n                                <textarea value={this.state.talk.msg} onChange={this.handleChange.bind(this,\"msg\")}></textarea>\r\n                                <button className=\"iconfont\" onClick={this.sendChat}>&#xe6b2;</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={this.state.ToastClass}>{this.state.toast}</div>\r\n                    <div className={this.state.SearchClass}>\r\n                        <div className=\"Search_head\">\r\n                            <button className=\"iconfont\" onClick={this.shutdown}>&#xe6af;</button>\r\n                        </div>\r\n                        <div className=\"Search_list\">\r\n                            <table>\r\n                                <tbody>\r\n                                {\r\n                                    this.state.SearchList.map((item,index) => {\r\n                                        return(\r\n                                            <tr key={index}>\r\n                                                <td>{item.talkname}</td>\r\n                                                <td>{item.maker}</td>\r\n                                                <td className=\"Search_add\"><button className=\"iconfont\" onClick={() => this.joinTalk(item.talkname)}>&#xe6b8;</button></td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                    \r\n                                }\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        \r\n    }\r\n}\r\nexport default Chat;","import React from 'react';\nimport './App.css';\nimport Login from './Login';\nimport Chat from './Chat';\n\nclass App extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            LoginClass:\"Login\",\n            ChatClass:\"Chat disnone\",\n            IsLogin:false,\n            ChatMsg:{}\n        }\n        // this.getLoginMsg = this.getLoginMsg.bind(this);\n    }\n\n    getLoginMsg = (flag) => {\n        this.setState({LoginClass:\"Login\"});\n        this.setState({IsLogin:flag});\n        this.state.IsLogin ? this.setState({LoginClass:\"Login animate__animated animate__zoomOut\"}) : this.setState({LoginClass:\"Login animate__animated animate__shakeX\"});\n        setTimeout(() => {\n            if(this.state.IsLogin){\n                this.setState({LoginClass:\"Login disnone\"});\n                this.setState({ChatClass:\"Chat animate__animated animate__zoomIn\"});\n            }else{\n                this.setState({LoginClass:\"Login\"});\n            }\n        },1000)\n    }\n    \n    getChatMsg = (msg) => {\n        this.setState({ChatMsg:msg});\n    }\n    \n    render(){\n        return <div className=\"content\">\n                    <div className={this.state.LoginClass}>\n                        <Login parent = {this}/>\n                    </div>\n                    <div className={this.state.ChatClass}>\n                        <Chat chatData = {this.state.ChatMsg}/>\n                    </div>\n                </div>\n    }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import Login from './Login';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}